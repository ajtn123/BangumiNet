// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.V0.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SubjectRevisionData : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The field_eps property</summary>
        public int? FieldEps { get; set; }
        /// <summary>The field_infobox property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldInfobox { get; set; }
#nullable restore
#else
        public string FieldInfobox { get; set; }
#endif
        /// <summary>The field_summary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldSummary { get; set; }
#nullable restore
#else
        public string FieldSummary { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The name_cn property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NameCn { get; set; }
#nullable restore
#else
        public string NameCn { get; set; }
#endif
        /// <summary>The platform property</summary>
        public int? Platform { get; set; }
        /// <summary>The subject_id property</summary>
        public int? SubjectId { get; set; }
        /// <summary>The type property</summary>
        public int? Type { get; set; }
        /// <summary>The type_id property</summary>
        public int? TypeId { get; set; }
        /// <summary>The vote_field property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VoteField { get; set; }
#nullable restore
#else
        public string VoteField { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.V0.Models.SubjectRevisionData"/> and sets the default values.
        /// </summary>
        public SubjectRevisionData()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.V0.Models.SubjectRevisionData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.V0.Models.SubjectRevisionData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.V0.Models.SubjectRevisionData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "field_eps", n => { FieldEps = n.GetIntValue(); } },
                { "field_infobox", n => { FieldInfobox = n.GetStringValue(); } },
                { "field_summary", n => { FieldSummary = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "name_cn", n => { NameCn = n.GetStringValue(); } },
                { "platform", n => { Platform = n.GetIntValue(); } },
                { "subject_id", n => { SubjectId = n.GetIntValue(); } },
                { "type", n => { Type = n.GetIntValue(); } },
                { "type_id", n => { TypeId = n.GetIntValue(); } },
                { "vote_field", n => { VoteField = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("field_eps", FieldEps);
            writer.WriteStringValue("field_infobox", FieldInfobox);
            writer.WriteStringValue("field_summary", FieldSummary);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("name_cn", NameCn);
            writer.WriteIntValue("platform", Platform);
            writer.WriteIntValue("subject_id", SubjectId);
            writer.WriteIntValue("type", Type);
            writer.WriteIntValue("type_id", TypeId);
            writer.WriteStringValue("vote_field", VoteField);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

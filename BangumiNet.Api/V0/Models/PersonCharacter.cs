// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.V0.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PersonCharacter : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>object with some size of images, this object maybe `null`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.V0.Models.PersonImages? Images { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.V0.Models.PersonImages Images { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The staff property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Staff { get; set; }
#nullable restore
#else
        public string Staff { get; set; }
#endif
        /// <summary>The subject_id property</summary>
        public int? SubjectId { get; set; }
        /// <summary>The subject_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubjectName { get; set; }
#nullable restore
#else
        public string SubjectName { get; set; }
#endif
        /// <summary>The subject_name_cn property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubjectNameCn { get; set; }
#nullable restore
#else
        public string SubjectNameCn { get; set; }
#endif
        /// <summary>条目类型- `1` 为 书籍- `2` 为 动画- `3` 为 音乐- `4` 为 游戏- `6` 为 三次元没有 `5`</summary>
        public int? SubjectType { get; set; }
        /// <summary>角色，机体，舰船，组织...</summary>
        public int? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.V0.Models.PersonCharacter"/> and sets the default values.
        /// </summary>
        public PersonCharacter()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.V0.Models.PersonCharacter"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.V0.Models.PersonCharacter CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.V0.Models.PersonCharacter();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "id", n => { Id = n.GetIntValue(); } },
                { "images", n => { Images = n.GetObjectValue<global::BangumiNet.Api.V0.Models.PersonImages>(global::BangumiNet.Api.V0.Models.PersonImages.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "staff", n => { Staff = n.GetStringValue(); } },
                { "subject_id", n => { SubjectId = n.GetIntValue(); } },
                { "subject_name", n => { SubjectName = n.GetStringValue(); } },
                { "subject_name_cn", n => { SubjectNameCn = n.GetStringValue(); } },
                { "subject_type", n => { SubjectType = n.GetIntValue(); } },
                { "type", n => { Type = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::BangumiNet.Api.V0.Models.PersonImages>("images", Images);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("staff", Staff);
            writer.WriteIntValue("subject_id", SubjectId);
            writer.WriteStringValue("subject_name", SubjectName);
            writer.WriteStringValue("subject_name_cn", SubjectNameCn);
            writer.WriteIntValue("subject_type", SubjectType);
            writer.WriteIntValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

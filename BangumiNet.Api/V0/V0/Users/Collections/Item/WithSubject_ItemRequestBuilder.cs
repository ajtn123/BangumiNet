// <auto-generated/>
#pragma warning disable CS0618
using BangumiNet.Api.V0.Models;
using BangumiNet.Api.V0.V0.Users.Collections.Item.Episodes;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace BangumiNet.Api.V0.V0.Users.Collections.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v0\users\-\collections\{subject_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithSubject_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The episodes property</summary>
        public global::BangumiNet.Api.V0.V0.Users.Collections.Item.Episodes.EpisodesRequestBuilder Episodes
        {
            get => new global::BangumiNet.Api.V0.V0.Users.Collections.Item.Episodes.EpisodesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.V0.V0.Users.Collections.Item.WithSubject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithSubject_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v0/users/-/collections/{subject_id}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.V0.V0.Users.Collections.Item.WithSubject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithSubject_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v0/users/-/collections/{subject_id}", rawUrl)
        {
        }
        /// <summary>
        /// 修改条目收藏状态由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。PATCH 方法的所有请求体字段均可选
        /// </summary>
        /// <param name="body">所有的字段均可选</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 400 status code</exception>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 401 status code</exception>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task PatchAsync(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task PatchAsync(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
                { "401", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
                { "404", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// 修改条目收藏状态, 如果不存在则创建，如果存在则修改由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。方法的所有请求体字段均可选
        /// </summary>
        /// <param name="body">所有的字段均可选</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 400 status code</exception>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 401 status code</exception>
        /// <exception cref="global::BangumiNet.Api.V0.Models.ErrorDetail">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task PostAsync(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task PostAsync(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
                { "401", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
                { "404", global::BangumiNet.Api.V0.Models.ErrorDetail.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// 修改条目收藏状态由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。PATCH 方法的所有请求体字段均可选
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">所有的字段均可选</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// 修改条目收藏状态, 如果不存在则创建，如果存在则修改由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。方法的所有请求体字段均可选
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">所有的字段均可选</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::BangumiNet.Api.V0.Models.UserSubjectCollectionModifyPayload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.V0.V0.Users.Collections.Item.WithSubject_ItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::BangumiNet.Api.V0.V0.Users.Collections.Item.WithSubject_ItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::BangumiNet.Api.V0.V0.Users.Collections.Item.WithSubject_ItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithSubject_ItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithSubject_ItemRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using BangumiNet.Api.P1.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.P1.Wiki.Subjects.Item.Covers
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CoversGetResponse_covers_creator : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The avatar property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.Avatar? Avatar { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.Avatar Avatar { get; set; }
#endif
        /// <summary>The group property</summary>
        public int? Group { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The joinedAt property</summary>
        public int? JoinedAt { get; set; }
        /// <summary>The nickname property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Nickname { get; set; }
#nullable restore
#else
        public string Nickname { get; set; }
#endif
        /// <summary>The sign property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sign { get; set; }
#nullable restore
#else
        public string Sign { get; set; }
#endif
        /// <summary>The username property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username { get; set; }
#nullable restore
#else
        public string Username { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.P1.Wiki.Subjects.Item.Covers.CoversGetResponse_covers_creator"/> and sets the default values.
        /// </summary>
        public CoversGetResponse_covers_creator()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.P1.Wiki.Subjects.Item.Covers.CoversGetResponse_covers_creator"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.P1.Wiki.Subjects.Item.Covers.CoversGetResponse_covers_creator CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.P1.Wiki.Subjects.Item.Covers.CoversGetResponse_covers_creator();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "avatar", n => { Avatar = n.GetObjectValue<global::BangumiNet.Api.P1.Models.Avatar>(global::BangumiNet.Api.P1.Models.Avatar.CreateFromDiscriminatorValue); } },
                { "group", n => { Group = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "joinedAt", n => { JoinedAt = n.GetIntValue(); } },
                { "nickname", n => { Nickname = n.GetStringValue(); } },
                { "sign", n => { Sign = n.GetStringValue(); } },
                { "username", n => { Username = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.Avatar>("avatar", Avatar);
            writer.WriteIntValue("group", Group);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("joinedAt", JoinedAt);
            writer.WriteStringValue("nickname", Nickname);
            writer.WriteStringValue("sign", Sign);
            writer.WriteStringValue("username", Username);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

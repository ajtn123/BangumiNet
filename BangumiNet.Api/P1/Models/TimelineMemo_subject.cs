// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TimelineMemo_subject : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The collectID property</summary>
        public int? CollectID { get; set; }
        /// <summary>The comment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>The rate property</summary>
        public double? Rate { get; set; }
        /// <summary>The reactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BangumiNet.Api.P1.Models.Reaction>? Reactions { get; set; }
#nullable restore
#else
        public List<global::BangumiNet.Api.P1.Models.Reaction> Reactions { get; set; }
#endif
        /// <summary>The subject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.SlimSubject? Subject { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.SlimSubject Subject { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.TimelineMemo_subject"/> and sets the default values.
        /// </summary>
        public TimelineMemo_subject()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.TimelineMemo_subject"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.TimelineMemo_subject CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.TimelineMemo_subject();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "collectID", n => { CollectID = n.GetIntValue(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "rate", n => { Rate = n.GetDoubleValue(); } },
                { "reactions", n => { Reactions = n.GetCollectionOfObjectValues<global::BangumiNet.Api.P1.Models.Reaction>(global::BangumiNet.Api.P1.Models.Reaction.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subject", n => { Subject = n.GetObjectValue<global::BangumiNet.Api.P1.Models.SlimSubject>(global::BangumiNet.Api.P1.Models.SlimSubject.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("collectID", CollectID);
            writer.WriteStringValue("comment", Comment);
            writer.WriteDoubleValue("rate", Rate);
            writer.WriteCollectionOfObjectValues<global::BangumiNet.Api.P1.Models.Reaction>("reactions", Reactions);
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.SlimSubject>("subject", Subject);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

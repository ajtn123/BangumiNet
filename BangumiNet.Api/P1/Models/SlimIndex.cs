// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SlimIndex : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
        public int? CreatedAt { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The private property</summary>
        public bool? Private { get; set; }
        /// <summary>The stats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.IndexStats? Stats { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.IndexStats Stats { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The total property</summary>
        public int? Total { get; set; }
        /// <summary>目录类型  - 0 = 用户  - 1 = 公共  - 2 = TBA</summary>
        public int? Type { get; set; }
        /// <summary>The uid property</summary>
        public int? Uid { get; set; }
        /// <summary>The updatedAt property</summary>
        public int? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.SlimIndex"/> and sets the default values.
        /// </summary>
        public SlimIndex()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.SlimIndex"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.SlimIndex CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.SlimIndex();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "private", n => { Private = n.GetBoolValue(); } },
                { "stats", n => { Stats = n.GetObjectValue<global::BangumiNet.Api.P1.Models.IndexStats>(global::BangumiNet.Api.P1.Models.IndexStats.CreateFromDiscriminatorValue); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "total", n => { Total = n.GetIntValue(); } },
                { "type", n => { Type = n.GetIntValue(); } },
                { "uid", n => { Uid = n.GetIntValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("createdAt", CreatedAt);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("private", Private);
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.IndexStats>("stats", Stats);
            writer.WriteStringValue("title", Title);
            writer.WriteIntValue("total", Total);
            writer.WriteIntValue("type", Type);
            writer.WriteIntValue("uid", Uid);
            writer.WriteIntValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

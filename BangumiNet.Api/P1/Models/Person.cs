// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Person : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>职业</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Career { get; set; }
#nullable restore
#else
        public List<string> Career { get; set; }
#endif
        /// <summary>The collectedAt property</summary>
        public int? CollectedAt { get; set; }
        /// <summary>The collects property</summary>
        public int? Collects { get; set; }
        /// <summary>The comment property</summary>
        public int? Comment { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The images property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.PersonImages? Images { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.PersonImages Images { get; set; }
#endif
        /// <summary>The info property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Info { get; set; }
#nullable restore
#else
        public string Info { get; set; }
#endif
        /// <summary>The infobox property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BangumiNet.Api.P1.Models.Persons>? Infobox { get; set; }
#nullable restore
#else
        public List<global::BangumiNet.Api.P1.Models.Persons> Infobox { get; set; }
#endif
        /// <summary>The lock property</summary>
        public bool? Lock { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The nameCN property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NameCN { get; set; }
#nullable restore
#else
        public string NameCN { get; set; }
#endif
        /// <summary>The nsfw property</summary>
        public bool? Nsfw { get; set; }
        /// <summary>The redirect property</summary>
        public int? Redirect { get; set; }
        /// <summary>The summary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; set; }
#nullable restore
#else
        public string Summary { get; set; }
#endif
        /// <summary>The type property</summary>
        public int? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.Person"/> and sets the default values.
        /// </summary>
        public Person()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.Person"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.Person CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.Person();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "career", n => { Career = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "collectedAt", n => { CollectedAt = n.GetIntValue(); } },
                { "collects", n => { Collects = n.GetIntValue(); } },
                { "comment", n => { Comment = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "images", n => { Images = n.GetObjectValue<global::BangumiNet.Api.P1.Models.PersonImages>(global::BangumiNet.Api.P1.Models.PersonImages.CreateFromDiscriminatorValue); } },
                { "info", n => { Info = n.GetStringValue(); } },
                { "infobox", n => { Infobox = n.GetCollectionOfObjectValues<global::BangumiNet.Api.P1.Models.Persons>(global::BangumiNet.Api.P1.Models.Persons.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lock", n => { Lock = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "nameCN", n => { NameCN = n.GetStringValue(); } },
                { "nsfw", n => { Nsfw = n.GetBoolValue(); } },
                { "redirect", n => { Redirect = n.GetIntValue(); } },
                { "summary", n => { Summary = n.GetStringValue(); } },
                { "type", n => { Type = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("career", Career);
            writer.WriteIntValue("collectedAt", CollectedAt);
            writer.WriteIntValue("collects", Collects);
            writer.WriteIntValue("comment", Comment);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.PersonImages>("images", Images);
            writer.WriteStringValue("info", Info);
            writer.WriteCollectionOfObjectValues<global::BangumiNet.Api.P1.Models.Persons>("infobox", Infobox);
            writer.WriteBoolValue("lock", Lock);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("nameCN", NameCN);
            writer.WriteBoolValue("nsfw", Nsfw);
            writer.WriteIntValue("redirect", Redirect);
            writer.WriteStringValue("summary", Summary);
            writer.WriteIntValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CreateIndexRelated : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The award property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Award { get; set; }
#nullable restore
#else
        public string Award { get; set; }
#endif
        /// <summary>目录关联类型  - 0 = 条目  - 1 = 角色  - 2 = 人物  - 3 = 章节  - 4 = 日志  - 5 = 小组话题  - 6 = 条目讨论</summary>
        public int? Cat { get; set; }
        /// <summary>The comment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>The order property</summary>
        public int? Order { get; set; }
        /// <summary>The sid property</summary>
        public int? Sid { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.CreateIndexRelated"/> and sets the default values.
        /// </summary>
        public CreateIndexRelated()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.CreateIndexRelated"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.CreateIndexRelated CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.CreateIndexRelated();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "award", n => { Award = n.GetStringValue(); } },
                { "cat", n => { Cat = n.GetIntValue(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "order", n => { Order = n.GetIntValue(); } },
                { "sid", n => { Sid = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("award", Award);
            writer.WriteIntValue("cat", Cat);
            writer.WriteStringValue("comment", Comment);
            writer.WriteIntValue("order", Order);
            writer.WriteIntValue("sid", Sid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

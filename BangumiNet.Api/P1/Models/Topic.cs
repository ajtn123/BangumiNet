// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Topic : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>发帖时间，unix time stamp in seconds</summary>
        public int? CreatedAt { get; set; }
        /// <summary>The creator property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.SlimUser? Creator { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.SlimUser Creator { get; set; }
#endif
        /// <summary>The creatorID property</summary>
        public int? CreatorID { get; set; }
        /// <summary>The display property</summary>
        public int? Display { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>小组/条目ID</summary>
        public int? ParentID { get; set; }
        /// <summary>The replyCount property</summary>
        public int? ReplyCount { get; set; }
        /// <summary>The state property</summary>
        public int? State { get; set; }
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>最后回复时间，unix time stamp in seconds</summary>
        public int? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.Topic"/> and sets the default values.
        /// </summary>
        public Topic()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.Topic"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.Topic CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.Topic();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetIntValue(); } },
                { "creator", n => { Creator = n.GetObjectValue<global::BangumiNet.Api.P1.Models.SlimUser>(global::BangumiNet.Api.P1.Models.SlimUser.CreateFromDiscriminatorValue); } },
                { "creatorID", n => { CreatorID = n.GetIntValue(); } },
                { "display", n => { Display = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "parentID", n => { ParentID = n.GetIntValue(); } },
                { "replyCount", n => { ReplyCount = n.GetIntValue(); } },
                { "state", n => { State = n.GetIntValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("createdAt", CreatedAt);
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.SlimUser>("creator", Creator);
            writer.WriteIntValue("creatorID", CreatorID);
            writer.WriteIntValue("display", Display);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("parentID", ParentID);
            writer.WriteIntValue("replyCount", ReplyCount);
            writer.WriteIntValue("state", State);
            writer.WriteStringValue("title", Title);
            writer.WriteIntValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

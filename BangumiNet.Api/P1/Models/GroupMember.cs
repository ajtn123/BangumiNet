// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.P1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GroupMember : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The joinedAt property</summary>
        public int? JoinedAt { get; set; }
        /// <summary>小组成员角色  - -2 = 访客  - -1 = 游客  - 0 = 小组成员  - 1 = 小组长  - 2 = 小组管理员  - 3 = 禁言成员</summary>
        public int? Role { get; set; }
        /// <summary>The uid property</summary>
        public int? Uid { get; set; }
        /// <summary>The user property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.P1.Models.SlimUser? User { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.P1.Models.SlimUser User { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.P1.Models.GroupMember"/> and sets the default values.
        /// </summary>
        public GroupMember()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.P1.Models.GroupMember"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.P1.Models.GroupMember CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.P1.Models.GroupMember();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "joinedAt", n => { JoinedAt = n.GetIntValue(); } },
                { "role", n => { Role = n.GetIntValue(); } },
                { "uid", n => { Uid = n.GetIntValue(); } },
                { "user", n => { User = n.GetObjectValue<global::BangumiNet.Api.P1.Models.SlimUser>(global::BangumiNet.Api.P1.Models.SlimUser.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("joinedAt", JoinedAt);
            writer.WriteIntValue("role", Role);
            writer.WriteIntValue("uid", Uid);
            writer.WriteObjectValue<global::BangumiNet.Api.P1.Models.SlimUser>("user", User);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

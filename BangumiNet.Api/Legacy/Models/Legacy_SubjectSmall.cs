// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BangumiNet.Api.Legacy.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Legacy_SubjectSmall : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>放送开始日期</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AirDate { get; set; }
#nullable restore
#else
        public string AirDate { get; set; }
#endif
        /// <summary>放送星期</summary>
        public int? AirWeekday { get; set; }
        /// <summary>收藏人数</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_collection? Collection { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_collection Collection { get; set; }
#endif
        /// <summary>话数</summary>
        public int? Eps { get; set; }
        /// <summary>话数</summary>
        public int? EpsCount { get; set; }
        /// <summary>条目 ID</summary>
        public int? Id { get; set; }
        /// <summary>封面</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_images? Images { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_images Images { get; set; }
#endif
        /// <summary>条目名称</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>条目中文名称</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NameCn { get; set; }
#nullable restore
#else
        public string NameCn { get; set; }
#endif
        /// <summary>排名</summary>
        public int? Rank { get; set; }
        /// <summary>评分</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_rating? Rating { get; set; }
#nullable restore
#else
        public global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_rating Rating { get; set; }
#endif
        /// <summary>剧情简介</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; set; }
#nullable restore
#else
        public string Summary { get; set; }
#endif
        /// <summary>条目类型- `1` 为 书籍- `2` 为 动画- `3` 为 音乐- `4` 为 游戏- `6` 为 三次元没有 `5`</summary>
        public int? Type { get; set; }
        /// <summary>条目地址</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall"/> and sets the default values.
        /// </summary>
        public Legacy_SubjectSmall()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "air_date", n => { AirDate = n.GetStringValue(); } },
                { "air_weekday", n => { AirWeekday = n.GetIntValue(); } },
                { "collection", n => { Collection = n.GetObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_collection>(global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_collection.CreateFromDiscriminatorValue); } },
                { "eps", n => { Eps = n.GetIntValue(); } },
                { "eps_count", n => { EpsCount = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "images", n => { Images = n.GetObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_images>(global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_images.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "name_cn", n => { NameCn = n.GetStringValue(); } },
                { "rank", n => { Rank = n.GetIntValue(); } },
                { "rating", n => { Rating = n.GetObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_rating>(global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_rating.CreateFromDiscriminatorValue); } },
                { "summary", n => { Summary = n.GetStringValue(); } },
                { "type", n => { Type = n.GetIntValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("air_date", AirDate);
            writer.WriteIntValue("air_weekday", AirWeekday);
            writer.WriteObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_collection>("collection", Collection);
            writer.WriteIntValue("eps", Eps);
            writer.WriteIntValue("eps_count", EpsCount);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_images>("images", Images);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("name_cn", NameCn);
            writer.WriteIntValue("rank", Rank);
            writer.WriteObjectValue<global::BangumiNet.Api.Legacy.Models.Legacy_SubjectSmall_rating>("rating", Rating);
            writer.WriteStringValue("summary", Summary);
            writer.WriteIntValue("type", Type);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
